try {
    let e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : {}
      , o = (new e.Error).stack;
    o && (e._sentryDebugIds = e._sentryDebugIds || {},
    e._sentryDebugIds[o] = "204b7d64-c7eb-4ce1-987b-c7bdb9d44029",
    e._sentryDebugIdIdentifier = "sentry-dbid-204b7d64-c7eb-4ce1-987b-c7bdb9d44029")
} catch (e) {}
("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : {}).SENTRY_RELEASE = {
    id: "0ff45a48b301aa5bdf58de886f984bc286f656ce"
};
!function(e, o) {
    if ("object" == typeof exports && "object" == typeof module)
        module.exports = o();
    else if ("function" == typeof define && define.amd)
        define([], o);
    else {
        var t = o();
        for (var n in t)
            ("object" == typeof exports ? exports : e)[n] = t[n]
    }
}(globalThis, (function() {
    return window.addEventListener("message", (e => {
        e.data.vidiqPageRequest && ( ({url: e, authHeader: o, authUser: t, payload: n, requestKey: d}) => {
            const i = {}
              , r = new AbortController
              , s = r.signal
              , f = setTimeout(( () => {
                r.abort()
            }
            ), 35e3);
            fetch(e, {
                method: "POST",
                headers: {
                    Authorization: o,
                    "X-Goog-Authuser": t
                },
                body: n,
                signal: s
            }).then((e => e.json())).then((e => {
                if (e.error)
                    throw new Error(JSON.stringify(e.error));
                clearTimeout(f),
                i[d] = JSON.stringify(e),
                postMessage(i, window.location.href)
            }
            )).catch((e => {
                i[d] = JSON.stringify({
                    error: !0,
                    errorMessage: e.toString()
                }),
                postMessage(i, window.location.href)
            }
            ))
        }
        )(e.data.vidiqPageRequest)
    }
    )),
    {}
}
));
//# sourceMappingURL=pageRequest.bundle.js.map
